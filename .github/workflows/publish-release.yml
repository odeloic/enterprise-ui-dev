name: Publish release notes

on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: "git commit sha to be released"
        required: true
        default: "main"
      version_inc:
        description: "specify part of the semver version to be updated, should be major, minor or patch."
        type: choice
        required: true
        default: "minor"
        options:
          - "major"
          - "minor"
          - "patch"

env:
  NODE_VERSION: "20.9.x" # set this to the node version to use
  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_REGISTRY_URL: https://npm.pkg.github.com/

jobs:
  publish-release-notes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
      - run: npm ci

      - name: Get reports
        run: |
          mkdir -p ${{ env.COVERAGE_DIR }} ${{ env.RESULTS_DIR }}

          # Unit Tests
          LAST_UNIT_TESTS_ON_MAIN=$(gh run list -b main -w "Test & Build" --json databaseId --jq '.[0].databaseId')
          gh run download $LAST_UNIT_TESTS_ON_MAIN -n test-coverage -n test-results --dir reports/unit
          mv reports/unit/test-coverage/cobertura-coverage.xml ${{ env.COVERAGE_DIR }}/unit.xml
          mv reports/unit/test-results/results.xml ${{ env.RESULTS_DIR }}/unit.xml

          # ADD CYPRESS Tests here

          zip -j test-coverage.zip ${{ env.COVERAGE_DIR }}/*
          zip -j test-results.zip ${{ env.RESULTS_DIR }}/*
        env:
          GH_TOKEN: ${{ github.token }}
          COVERAGE_DIR: reports/coverage
          RESULTS_DIR: reports/results

      - name: Release with release-it ðŸ¥³ðŸ¥³ðŸ¥³
        id: release-it
        run: |
          echo "$RELEASE_LEVEL"
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"
          npm run release-it-$RELEASE_LEVEL -- --github.assets=*.zip
        env:
          RELEASE_LEVEL: ${{ github.event.inputs.version_inc || 'patch' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      release-tag: ${{ steps.release-it.outputs.TAG }}
        

  say-nice-things:
    needs: publish-release-notes
    runs-on: ubuntu-latest
    steps:
      - uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{ github.repository }}
          prefix: 'v'
          releases-only: false
        id: release-tag
      
      - run: echo "This bit is @ version ${{ steps.release-tag.outputs.tag }}"
      
        